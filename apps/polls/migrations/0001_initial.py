# -*- coding: utf-8 -*-
# Generated by Django 1.11 on 2018-09-08 10:19
from __future__ import unicode_literals

import datetime
from django.conf import settings
from django.db import migrations, models
import django.utils.timezone
import functools
import apps.polls.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=500)),
            ],
        ),
        migrations.CreateModel(
            name='Choice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=128)),
                ('has_extra_data', models.BooleanField(choices=[(False, '不需要用户输入'), (True, '还有其他未列出选项，请用户输入')], default=False)),
            ],
        ),
        migrations.CreateModel(
            name='ExtraData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Poll',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('pub_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('end_date', models.DateTimeField(default=functools.partial(apps.polls.utils.now_delta, *(datetime.timedelta(7),), **{}))),
                ('is_open', models.BooleanField(choices=[(True, '公开结果'), (False, '不公开结果')], default=True)),
                ('is_pub', models.BooleanField(default=False)),
                ('description', models.CharField(blank=True, max_length=500, null=True)),
                ('submit_num', models.IntegerField(default=0, verbose_name='参与人数')),
                ('owner', models.ForeignKey(blank=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-pub_date'],
            },
        ),
        migrations.CreateModel(
            name='PollQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('index', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=128)),
                ('choice_type', models.SmallIntegerField(choices=[(0, '单选'), (1, '多选'), (2, '回答')], default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num', models.IntegerField(default=0)),
                ('index', models.IntegerField(default=0)),
                ('choice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Choice')),
                ('poll_question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='votes', to='polls.PollQuestion')),
                ('users', models.ManyToManyField(blank=True, related_name='user_votes', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='pollquestion',
            name='choices',
            field=models.ManyToManyField(through='polls.Vote', to='polls.Choice'),
        ),
        migrations.AddField(
            model_name='pollquestion',
            name='poll',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='poll_questions', to='polls.Poll'),
        ),
        migrations.AddField(
            model_name='pollquestion',
            name='question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='polls.Question'),
        ),
        migrations.AddField(
            model_name='poll',
            name='questions',
            field=models.ManyToManyField(related_name='polls', through='polls.PollQuestion', to='polls.Question'),
        ),
        migrations.AddField(
            model_name='extradata',
            name='vote',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='extra_data_list', to='polls.Vote'),
        ),
        migrations.AddField(
            model_name='answer',
            name='poll_question',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='polls.PollQuestion'),
        ),
        migrations.AddField(
            model_name='answer',
            name='user',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterUniqueTogether(
            name='vote',
            unique_together=set([('poll_question', 'choice')]),
        ),
        migrations.AlterUniqueTogether(
            name='pollquestion',
            unique_together=set([('poll', 'question')]),
        ),
    ]
